const masterCardImage = document.getElementById('mastercard-image');
const visaImage = document.getElementById('visa-image');
const visaPattern = /^(?:4[0-9]{12}(?:[0-9]{3})?)$/;
const mastercardPattern = /^(?:5[1-5][0-9]{14})$/;
const cardForm = document.getElementById('card-form');
const userIcon = document.getElementById('user-icon');
const cardTableBody = document.getElementById('card-table-body');
const currentUser = JSON.parse(localStorage.getItem('currentUser')) || {};
const expiryDate = document.getElementById('expirydate');
const cardNum = document.getElementById('cardnumber');




function deleteCard(cardToDelete){
    // console.log("adara", cardToDelete);
    // console.log(cardToDelete);
    const currentUser = JSON.parse(localStorage.getItem('currentUser')) || {};
    let existingCards = JSON.parse(localStorage.getItem(currentUser.username + '_cards')) || [];

    console.log("existing >>>>", existingCards);
    // updatedCards = existingCards.filter(card => card.cardNumber !== cardToDelete);
    const updatedCards = existingCards.filter(card => {
        console.log("here >>>", typeof(card.cardNumber), typeof(cardToDelete));
        return card.cardNumber !== cardToDelete.toString();
    }); 



    // console.log("eeeee",existingCards);
    console.log("uuuuuuuuuuus",updatedCards);


    localStorage.setItem(currentUser.username + '_cards', JSON.stringify(updatedCards));
    displaySavedCards();
}

function displaySavedCards() {
    cardTableBody.innerHTML = '';

    const savedCards = JSON.parse(localStorage.getItem(currentUser.username + '_cards')) || [];

    savedCards.forEach(card => {
        const row = cardTableBody.insertRow();
        row.insertCell(0).textContent = card.cardHolder;
        row.insertCell(1).textContent = card.cardNumber;
        row.insertCell(2).textContent = card.expiryDate;
        row.insertCell(3).textContent = card.cvv;
        row.insertCell(4).innerHTML =   `<button class= 'delete-btn' onclick = 'deleteCard(${card.cardNumber})'>Delete</button>`;
    });
}

// document.addEventListener('DOMContentLoaded', function () {

    window.onload = function(){
        userIcon.addEventListener('click', clickhandler);
        displaySavedCards();

    }

    function clickhandler(){
        let dropDownContent = document.getElementById('dropdown-content');
        dropDownContent.style.display = dropDownContent.style.display === 'block' ? 'none': 'block';
    }

    // document.getElementById('user-icon').addEventListener('click', function() {
    //     let dropDownContent = document.getElementsByClassName('dropdown-content');
    //     dropDownContent.style.display = dropDownContent.style.display === 'none' ? 'block': 'none';
    // });

    document.getElementById('add-icon').addEventListener('click', function () {
        let cardForm = document.getElementById('card-form');
        cardForm.style.display = cardForm.style.display === 'block' ? 'none' : 'block';
    });

    cardForm.addEventListener('submit', function (event) {
        event.preventDefault();

        const cardHolder = document.getElementById('cardholder').value;
        const cardNumber = document.getElementById('cardnumber').value;
        const expiryDate = document.getElementById('expirydate').value;
        const cvv = document.getElementById('cvv').value;
        
        if(validCard){
            saveCardDetails(cardHolder, cardNumber, expiryDate, cvv);
            displaySavedCards();
        }

        // saveCardDetails(cardHolder, cardNumber, expiryDate, cvv);
        // displaySavedCards();
    });

    function saveCardDetails(cardHolder, cardNumber, expiryDate, cvv) {
        const existingCards = JSON.parse(localStorage.getItem(currentUser.username + '_cards')) || [];

        if (!isCardNumberUnique(cardNumber, existingCards)) {
            alert('Card with this number already exists. Please enter a unique card number.');
            // displayError("Card with this number already exists.")
            return;
        }

        existingCards.push({
            cardHolder,
            cardNumber,
            expiryDate,
            cvv
        });

        localStorage.setItem(currentUser.username + '_cards', JSON.stringify(existingCards));
        cardForm.reset();
    }

    function isCardNumberUnique(newCardNumber, existingCards) {
        return !existingCards.some(card => card.cardNumber === newCardNumber);
    }

    
    // cardNum.addEventListener('keyup', function() {
    //     const cardNumber = this.value;

    //     if (visaPattern.test(cardNumber)) {
    //         visaImage.style.display = 'block';
    //         masterCardImage.style.display = 'none';
    //     } else if (mastercardPattern.test(cardNumber)) {
    //         masterCardImage.style.display = 'block';
    //         visaImage.style.display = 'none';
    //     }
    //     else{
    //         masterCardImage.style.display = 'none';
    //         visaImage.style.display = 'none';
    //     }
    // });

    // cardNum.addEventListener('blur', function(){
    //     const cardNumber = this.value;
        
    //     if(!visaPattern.test(cardNumber) && !visaPattern.test(cardNumber)){
    //         visaImage.style.display = 'none';
    //         masterCardImage.style.display = 'none';
    //         // this.value = '';
    //         displayError("Not valid Card Number");

    //     }

    // });

    // const expiryDate = document.getElementById('expirydate');
    
    // expiryDate.addEventListener('blur', function() {
    //     let inputDate = this.value;
    //     let currentDate = new Date();
    //     let currentMonth = currentDate.getMonth() + 1; 
    //     let currentYear = currentDate.getFullYear();
        
    //     let inputMonth = parseInt(inputDate.split('/')[0], 10); 
    //     let inputYear = parseInt(inputDate.split('/')[1], 10); 
        
    //     if (inputYear < currentYear || (inputYear === currentYear && inputMonth < currentMonth)) {
    //         // alert('Expiry date must be greater than or equal to the current date.');
    //         displayError("Expiry date must be greater than or equal to the current state.")
    //         this.value = '';
    //         // this.focus(); 
    //     }   
    // });

    expiryDate.addEventListener('keyup', (e) => {
        if (e.target.value.length ==2) {
            e.target.value = e.target.value + "/";
        } 
    });

    function displayError(message) {
        const passErrorDiv = document.querySelector('.card-error');
        passErrorDiv.textContent = message;
        passErrorDiv.style.display = 'block';

        setTimeout(clearDisplay, 1000);
            function clearDisplay(){
                passErrorDiv.style.display = 'none';
            }
    }

    // cardTableBody.addEventListener('click', function(event){
    //     if(event.target.classList.contains('delete-btn')){
    //         const cardToDelete = event.target.dataset.cardNumber;
    //         console.log(event);
    //         deleteCard(cardToDelete);
    //     }
    // });

    function validCard(){
        if(validCardNum && validExpiry){
            return true;
        }
        return false;
    }

    function validCardNum(){
        cardNum.addEventListener('blur', function(){
            const cardNumber = this.value;
            
            if(!visaPattern.test(cardNumber) && !visaPattern.test(cardNumber)){
                visaImage.style.display = 'none';
                masterCardImage.style.display = 'none';
                // this.value = '';
                displayError("Not valid Card Number");
    
            }
    
        });
    }

    cardNum.addEventListener('keyup', function() {
        const cardNumber = this.value;

        if (visaPattern.test(cardNumber)) {
            visaImage.style.display = 'block';
            masterCardImage.style.display = 'none';
        } else if (mastercardPattern.test(cardNumber)) {
            masterCardImage.style.display = 'block';
            visaImage.style.display = 'none';
        }
        else{
            masterCardImage.style.display = 'none';
            visaImage.style.display = 'none';
        }
    });

    function validExpiry(){
        expiryDate.addEventListener('blur', function() {
            let inputDate = this.value;
            let currentDate = new Date();
            let currentMonth = currentDate.getMonth() + 1; 
            let currentYear = currentDate.getFullYear();
            
            let inputMonth = parseInt(inputDate.split('/')[0], 10); 
            let inputYear = parseInt(inputDate.split('/')[1], 10); 
            
            if (inputYear < currentYear || (inputYear === currentYear && inputMonth < currentMonth)) {
                // alert('Expiry date must be greater than or equal to the current date.');
                displayError("Expiry date must be greater than or equal to the current state.")
                this.value = '';
                // this.focus(); 
            }   
        });
    }



    document.getElementById('logout').addEventListener('click', () =>{
        localStorage.removeItem('currentUser');
        window.location.replace('index.html');        
    })
// });



























....
...
...
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Credit Card Details</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="container">
    <h2>Enter your card details</h2>
    <div class="input-container">
      <input type="text" id="creditCardInput" placeholder="Enter your credit card number">
      <div id="cardLogoContainer">
        <img id="cardLogo" src="" alt="">
<h2>Enter your card details</h2>
    <div class="input-container">
      <input type="text" id="creditCardInput" placeholder="Enter your credit card number">
      <div id="cardLogoContainer">
        <img id="cardLogo" src="" alt="">
      </div>
    </div>
  </div>
  <script src="script.js"></script>
</body>
</html>
.container {
  max-width: 400px;
  margin: 50px auto;
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.input-container {
  position: relative;
}

input[type="text"] {
  width: calc(100% - 40px); /* Adjust for logo width and padding */
  padding: 10px;
  font-size: 16px;
}

#cardLogoContainer {
  position: absolute;
  top: 50%;
  right: 10px;
  transform: translateY(-50%);
}

#cardLogo {
  max-width: 30px; /* Adjust size as needed */
}
Varitant Arora
22:26
input[type="text"] {
  width: calc(100% - 40px); /* Adjust for logo width and padding */
  padding: 10px;
  font-size: 16px;
}

#cardLogoContainer {
  position: absolute;
  top: 50%;
  right: 10px;
  transform: translateY(-50%);
}

#cardLogo {
  max-width: 30px; /* Adjust size as needed */
}



